{"remainingRequest":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/src/components/Article.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/src/components/Article.vue","mtime":1638913610174},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1638914716023},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/babel-loader/lib/index.js","mtime":1638914724198},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1638914716023},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/vue-loader/lib/index.js","mtime":1638914719606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IEFydGljbGVTdG9yZSB9IGZyb20gJy4uL1N0b3Jlcy9BcnRpY2xlJzsKaW1wb3J0IGRhdGVGb3JtYXQgZnJvbSAnZGF0ZWZvcm1hdCc7CmltcG9ydCB7IGRhdGVGb3JtYXRzIH0gZnJvbSAnLi4vVXRpbGl0aWVzL0xhbmd1YWdlQ29kZXMnOwppbXBvcnQgUmljaFRleHRFbGVtZW50IGZyb20gJy4vUmljaFRleHRFbGVtZW50LnZ1ZSc7CmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0FydGljbGUnLAogIHByb3BzOiBbJ2xhbmd1YWdlJ10sCiAgZGF0YTogKCkgPT4gKHsKICAgIGFydGljbGU6IG51bGwsCiAgfSksCiAgY29tcHV0ZWQ6IHsKICAgIGFydGljbGVEYXRhOiBmdW5jdGlvbigpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICB0aXRsZTogXy5nZXQodGhpcy5hcnRpY2xlLCAndGl0bGUudmFsdWUnKSB8fCB0aGlzLiR0KCdBcnRpY2xlLm5vVGl0bGVWYWx1ZScpLAogICAgICAgIGltYWdlTGluazogXy5nZXQodGhpcy5hcnRpY2xlLCAndGVhc2VySW1hZ2UudmFsdWVbMF0udXJsJyksCiAgICAgICAgcG9zdERhdGU6IHRoaXMuZm9ybWF0RGF0ZShfLmdldCh0aGlzLmFydGljbGUsICdwb3N0RGF0ZS52YWx1ZScpKSwKICAgICAgICBib2R5Q29weUVsZW1lbnQ6IF8uZ2V0KHRoaXMuYXJ0aWNsZSwgJ2JvZHlDb3B5JykgfHwgdGhpcy4kdCgnQXJ0aWNsZS5ub0JvZHlDb3B5VmFsdWUnKQogICAgICB9OwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGxhbmd1YWdlOiBmdW5jdGlvbigpewogICAgICBBcnRpY2xlU3RvcmUucHJvdmlkZUFydGljbGUodGhpcy4kcm91dGUucGFyYW1zLmFydGljbGVJZCwgdGhpcy5sYW5ndWFnZSk7CiAgICAgIGRhdGVGb3JtYXQuaTE4biA9IGRhdGVGb3JtYXRzW3RoaXMubGFuZ3VhZ2VdIHx8IGRhdGVGb3JtYXRzWzBdOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZm9ybWF0RGF0ZTogZnVuY3Rpb24odmFsdWUpewogICAgICByZXR1cm4gdmFsdWUgPyBkYXRlRm9ybWF0KHZhbHVlLCAnZGRkZCwgbW1tbSBkLCB5eXl5JykgOiB0aGlzLiR0KCdBcnRpY2xlLm5vUG9zdERhdGVWYWx1ZScpOwogICAgfSwKICAgIG9uQ2hhbmdlOiBmdW5jdGlvbigpewogICAgICB0aGlzLmFydGljbGUgPSBBcnRpY2xlU3RvcmUuZ2V0QXJ0aWNsZSh0aGlzLiRyb3V0ZS5wYXJhbXMuYXJ0aWNsZUlkLCB0aGlzLmxhbmd1YWdlKTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uKCl7CiAgICBBcnRpY2xlU3RvcmUuc3Vic2NyaWJlKCk7CiAgICBBcnRpY2xlU3RvcmUuYWRkQ2hhbmdlTGlzdGVuZXIodGhpcy5vbkNoYW5nZSk7CiAgICBBcnRpY2xlU3RvcmUucHJvdmlkZUFydGljbGUodGhpcy4kcm91dGUucGFyYW1zLmFydGljbGVJZCwgdGhpcy5sYW5ndWFnZSk7CiAgICBkYXRlRm9ybWF0LmkxOG4gPSBkYXRlRm9ybWF0c1t0aGlzLmxhbmd1YWdlXSB8fCBkYXRlRm9ybWF0c1swXTsKICAgIHRoaXMuYXJ0aWNsZSA9IEFydGljbGVTdG9yZS5nZXRBcnRpY2xlKHRoaXMuJHJvdXRlLnBhcmFtcy5hcnRpY2xlSWQsIHRoaXMubGFuZ3VhZ2UpOwogIH0sCiAgYmVmb3JlVXBkYXRlOiBmdW5jdGlvbigpewogICAgdGhpcy5hcnRpY2xlID0gQXJ0aWNsZVN0b3JlLmdldEFydGljbGUodGhpcy4kcm91dGUucGFyYW1zLmFydGljbGVJZCwgdGhpcy5sYW5ndWFnZSk7CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbigpIHsKICAgIEFydGljbGVTdG9yZS51bnN1YnNjcmliZSgpOwogIH0sCiAgZGVzdHJveWVkOiBmdW5jdGlvbigpewogICAgQXJ0aWNsZVN0b3JlLnJlbW92ZUNoYW5nZUxpc3RlbmVyKHRoaXMub25DaGFuZ2UpOwogIH0sCiAgY29tcG9uZW50czogewogICAgUmljaFRleHRFbGVtZW50CiAgfQp9Cg=="},{"version":3,"sources":["Article.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Article.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div\n        v-if=\"!article\"\n        class=\"container\"\n    ></div>\n    <div\n        v-else\n        class=\"container\"\n    >\n        <article class=\"article-detail col-lg-9 col-md-12 article-detail-related-box\">\n            <h2>{{articleData.title}}</h2>\n            <div class=\"article-detail-datetime\">\n                {{articleData.postDate}}\n            </div>\n            <div class=\"row\">\n                <div class=\"article-detail-image col-md-push-2 col-md-8\">\n                    <img\n                        v-if=\"articleData.imageLink\"\n                        :alt=\"articleData.title\"\n                        class=\"img-responsive\"\n                        :src=\"articleData.imageLink\"\n                        :title=\"articleData.title\"\n                    />\n                    <span \n                        v-else \n                        class=\"img-responsive\"\n                    >{{ $t('Article.noTeaserValue') }}</span>\n                </div>\n            </div>\n            <div class=\"row\">\n                <RichTextElement\n                    v-if=\"articleData.bodyCopyElement.resolveHtml()\"\n                    class=\"article-detail-content\"\n                    :element=\"articleData.bodyCopyElement\"\n                />\n                <span\n                    v-else\n                    class=\"article-detail-content\"\n                >{{ $t('Article.noBodyCopyValue')}}</span>\n            </div>\n        </article>\n    </div>\n</template>\n\n<script>\nimport { ArticleStore } from '../Stores/Article';\nimport dateFormat from 'dateformat';\nimport { dateFormats } from '../Utilities/LanguageCodes';\nimport RichTextElement from './RichTextElement.vue';\nimport _ from 'lodash';\n\nexport default {\n  name: 'Article',\n  props: ['language'],\n  data: () => ({\n    article: null,\n  }),\n  computed: {\n    articleData: function() {\n      return {\n        title: _.get(this.article, 'title.value') || this.$t('Article.noTitleValue'),\n        imageLink: _.get(this.article, 'teaserImage.value[0].url'),\n        postDate: this.formatDate(_.get(this.article, 'postDate.value')),\n        bodyCopyElement: _.get(this.article, 'bodyCopy') || this.$t('Article.noBodyCopyValue')\n      };\n    }\n  },\n  watch: {\n    language: function(){\n      ArticleStore.provideArticle(this.$route.params.articleId, this.language);\n      dateFormat.i18n = dateFormats[this.language] || dateFormats[0];\n    }\n  },\n  methods: {\n    formatDate: function(value){\n      return value ? dateFormat(value, 'dddd, mmmm d, yyyy') : this.$t('Article.noPostDateValue');\n    },\n    onChange: function(){\n      this.article = ArticleStore.getArticle(this.$route.params.articleId, this.language);\n    }\n  },\n  mounted: function(){\n    ArticleStore.subscribe();\n    ArticleStore.addChangeListener(this.onChange);\n    ArticleStore.provideArticle(this.$route.params.articleId, this.language);\n    dateFormat.i18n = dateFormats[this.language] || dateFormats[0];\n    this.article = ArticleStore.getArticle(this.$route.params.articleId, this.language);\n  },\n  beforeUpdate: function(){\n    this.article = ArticleStore.getArticle(this.$route.params.articleId, this.language);\n  },\n  beforeDestroy: function() {\n    ArticleStore.unsubscribe();\n  },\n  destroyed: function(){\n    ArticleStore.removeChangeListener(this.onChange);\n  },\n  components: {\n    RichTextElement\n  }\n}\n</script>\n"]}]}