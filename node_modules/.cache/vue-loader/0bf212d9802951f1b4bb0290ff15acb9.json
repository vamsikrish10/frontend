{"remainingRequest":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/src/components/ContactMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/src/components/ContactMap.vue","mtime":1638913610180},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1638914716023},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/babel-loader/lib/index.js","mtime":1638914724198},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1638914716023},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/vue-loader/lib/index.js","mtime":1638914719606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWdWVTY3JvbGxUbyBmcm9tICd2dWUtc2Nyb2xsdG8nCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0NvbnRhY3RNYXAnLAogIHByb3BzOiBbJ2NhZmVzQWRkcmVzc2VzJywgJ2ZvY3VzT25BZGRyZXNzJ10sCiAgZGF0YTogKCkgPT4gKHsKICAgIG1hcFN0eWxlOiB7CiAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLAogICAgICB3aWR0aDogJzEwMCUnLAogICAgICBoZWlnaHQ6ICc0MDBweCcKICAgIH0sCiAgICBtYXJrZXJMb2NhdGlvbnM6IFtdLAogICAgY2VudGVyTG9jYXRpb246IHtsYXQ6IDQwLjg1NDg4NSwgbG5nOiAtODguMDgxODA3fSwKICAgIHpvb206IDQsCiAgICBtYXBMb2FkZWQ6IGZhbHNlLAogIH0pLAogIGNvbXB1dGVkOiB7CiAgICBtYXJrZXJzTG9hZGVkOiBmdW5jdGlvbigpewogICAgICByZXR1cm4gdGhpcy5tYXJrZXJMb2NhdGlvbnMubGVuZ3RoID4gMDsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBjYWZlc0FkZHJlc3NlczogZnVuY3Rpb24gKCkgewogICAgICB0aGlzLmdldE1hcE1hcmtlcnMoKTsKICAgIH0sCiAgICBtYXBMb2FkZWQ6IGZ1bmN0aW9uICgpIHsKICAgICAgdGhpcy5nZXRNYXBNYXJrZXJzKCk7CgogICAgfSwKICAgIGZvY3VzT25BZGRyZXNzOiBmdW5jdGlvbiAoKSB7CiAgICAgIGxldCBnZW9jb2RlciA9IG5ldyB3aW5kb3cuZ29vZ2xlLm1hcHMuR2VvY29kZXIoKTsKICAgICAgbGV0IGNhZmVBZGRyZXNzID0gdGhpcy5mb2N1c09uQWRkcmVzczsKICAgICAgZ2VvY29kZXIuZ2VvY29kZSh7J2FkZHJlc3MnOiBjYWZlQWRkcmVzc30sIChyZXN1bHRzLCBzdGF0dXMpID0+IHsKICAgICAgICBpZiAoc3RhdHVzID09PSB3aW5kb3cuZ29vZ2xlLm1hcHMuR2VvY29kZXJTdGF0dXMuT0spIHsKICAgICAgICAgIGxldCBsb2NhdGlvbiA9IHJlc3VsdHNbMF0uZ2VvbWV0cnkubG9jYXRpb247CiAgICAgICAgICB0aGlzLmNlbnRlckxvY2F0aW9uID0gbG9jYXRpb247CiAgICAgICAgICB0aGlzLnpvb20gPSAxNzsKICAgICAgICAgIFZ1ZVNjcm9sbFRvLnNjcm9sbFRvKCcjbWFwJyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlCiAgICAgICAgICBjb25zb2xlLndhcm4oJ0dlb2NvZGUgd2FzIG5vdCBzdWNjZXNzZnVsIGZvciB0aGUgZm9sbG93aW5nIHJlYXNvbjogJyArIHN0YXR1cyk7CiAgICAgICAgfQogICAgICB9KQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgcHVzaExvY2F0aW9uKGxvY2F0aW9uKSB7CiAgICAgIHRoaXMubWFya2VyTG9jYXRpb25zLnB1c2gobG9jYXRpb24pOwogICAgfSwKICAgIGdldE1hcE1hcmtlcnMoKSB7CiAgICAgIGlmICghdGhpcy5tYXBMb2FkZWQgfHwgdGhpcy5tYXJrZXJzTG9hZGVkKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIHRoaXMuY2FmZXNBZGRyZXNzZXMubWFwKGNhZmVBZGRyZXNzID0+IHsKICAgICAgICBsZXQgZ2VvY29kZXIgPSBuZXcgd2luZG93Lmdvb2dsZS5tYXBzLkdlb2NvZGVyKCk7CiAgICAgICAgZ2VvY29kZXIuZ2VvY29kZSh7J2FkZHJlc3MnOiBjYWZlQWRkcmVzc30sIChyZXN1bHRzLCBzdGF0dXMpID0+IHsKICAgICAgICAgIGlmIChzdGF0dXMgPT09IHdpbmRvdy5nb29nbGUubWFwcy5HZW9jb2RlclN0YXR1cy5PSykgewogICAgICAgICAgICBsZXQgbG9jYXRpb24gPSByZXN1bHRzWzBdLmdlb21ldHJ5LmxvY2F0aW9uOwogICAgICAgICAgICB0aGlzLnB1c2hMb2NhdGlvbihsb2NhdGlvbik7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZQogICAgICAgICAgICBjb25zb2xlLndhcm4oJ0dlb2NvZGUgd2FzIG5vdCBzdWNjZXNzZnVsIGZvciB0aGUgZm9sbG93aW5nIHJlYXNvbjogJyArIHN0YXR1cyk7CiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgfSk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiAoKSB7CiAgICB0aGlzLm1hcCA9IHRoaXMuJHJlZnMubWFwLm1hcE9iamVjdDsKICAgIHRoaXMuJHJlZnMubWFwLiRtYXBDcmVhdGVkLnRoZW4oKCkgPT4gewogICAgICB0aGlzLm1hcExvYWRlZCA9IHRydWUKICAgIH0pCiAgfSwKfQo="},{"version":3,"sources":["ContactMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ContactMap.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <gmap-map \n        class=\"map\" \n        :style=\"mapStyle\" \n        :center=\"centerLocation\" \n        :zoom=\"zoom\" \n        id=\"map\" \n        ref=\"map\"\n    >\n        <gmap-marker \n            v-for=\"(location, index) in markerLocations\" \n            v-if=\"mapLoaded\" \n            :key=\"index\" \n            :position=\"location\"\n        />\n    </gmap-map>\n\n</template>\n\n<script>\nimport VueScrollTo from 'vue-scrollto'\n\nexport default {\n  name: 'ContactMap',\n  props: ['cafesAddresses', 'focusOnAddress'],\n  data: () => ({\n    mapStyle: {\n      position: 'relative',\n      width: '100%',\n      height: '400px'\n    },\n    markerLocations: [],\n    centerLocation: {lat: 40.854885, lng: -88.081807},\n    zoom: 4,\n    mapLoaded: false,\n  }),\n  computed: {\n    markersLoaded: function(){\n      return this.markerLocations.length > 0;\n    }\n  },\n  watch: {\n    cafesAddresses: function () {\n      this.getMapMarkers();\n    },\n    mapLoaded: function () {\n      this.getMapMarkers();\n\n    },\n    focusOnAddress: function () {\n      let geocoder = new window.google.maps.Geocoder();\n      let cafeAddress = this.focusOnAddress;\n      geocoder.geocode({'address': cafeAddress}, (results, status) => {\n        if (status === window.google.maps.GeocoderStatus.OK) {\n          let location = results[0].geometry.location;\n          this.centerLocation = location;\n          this.zoom = 17;\n          VueScrollTo.scrollTo('#map');\n        } else {\n          // eslint-disable-next-line no-console\n          console.warn('Geocode was not successful for the following reason: ' + status);\n        }\n      })\n    }\n  },\n  methods: {\n    pushLocation(location) {\n      this.markerLocations.push(location);\n    },\n    getMapMarkers() {\n      if (!this.mapLoaded || this.markersLoaded) {\n        return;\n      }\n      this.cafesAddresses.map(cafeAddress => {\n        let geocoder = new window.google.maps.Geocoder();\n        geocoder.geocode({'address': cafeAddress}, (results, status) => {\n          if (status === window.google.maps.GeocoderStatus.OK) {\n            let location = results[0].geometry.location;\n            this.pushLocation(location);\n          } else {\n            // eslint-disable-next-line no-console\n            console.warn('Geocode was not successful for the following reason: ' + status);\n          }\n        })\n      });\n    }\n  },\n  mounted: function () {\n    this.map = this.$refs.map.mapObject;\n    this.$refs.map.$mapCreated.then(() => {\n      this.mapLoaded = true\n    })\n  },\n}\n</script>"]}]}