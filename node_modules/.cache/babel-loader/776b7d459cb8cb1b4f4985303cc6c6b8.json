{"remainingRequest":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/babel-loader/lib/index.js!/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/src/components/ContactMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/src/components/ContactMap.vue","mtime":1638913610180},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/package.json","mtime":1638913952165},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1638914716023},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/babel-loader/lib/index.js","mtime":1638914724198},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1638914716023},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/vue-loader/lib/index.js","mtime":1638914719606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFZ1ZVNjcm9sbFRvIGZyb20gJ3Z1ZS1zY3JvbGx0byc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ29udGFjdE1hcCcsCiAgcHJvcHM6IFsnY2FmZXNBZGRyZXNzZXMnLCAnZm9jdXNPbkFkZHJlc3MnXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbWFwU3R5bGU6IHsKICAgICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJywKICAgICAgICB3aWR0aDogJzEwMCUnLAogICAgICAgIGhlaWdodDogJzQwMHB4JwogICAgICB9LAogICAgICBtYXJrZXJMb2NhdGlvbnM6IFtdLAogICAgICBjZW50ZXJMb2NhdGlvbjogewogICAgICAgIGxhdDogNDAuODU0ODg1LAogICAgICAgIGxuZzogLTg4LjA4MTgwNwogICAgICB9LAogICAgICB6b29tOiA0LAogICAgICBtYXBMb2FkZWQ6IGZhbHNlCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIG1hcmtlcnNMb2FkZWQ6IGZ1bmN0aW9uIG1hcmtlcnNMb2FkZWQoKSB7CiAgICAgIHJldHVybiB0aGlzLm1hcmtlckxvY2F0aW9ucy5sZW5ndGggPiAwOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGNhZmVzQWRkcmVzc2VzOiBmdW5jdGlvbiBjYWZlc0FkZHJlc3NlcygpIHsKICAgICAgdGhpcy5nZXRNYXBNYXJrZXJzKCk7CiAgICB9LAogICAgbWFwTG9hZGVkOiBmdW5jdGlvbiBtYXBMb2FkZWQoKSB7CiAgICAgIHRoaXMuZ2V0TWFwTWFya2VycygpOwogICAgfSwKICAgIGZvY3VzT25BZGRyZXNzOiBmdW5jdGlvbiBmb2N1c09uQWRkcmVzcygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBnZW9jb2RlciA9IG5ldyB3aW5kb3cuZ29vZ2xlLm1hcHMuR2VvY29kZXIoKTsKICAgICAgdmFyIGNhZmVBZGRyZXNzID0gdGhpcy5mb2N1c09uQWRkcmVzczsKICAgICAgZ2VvY29kZXIuZ2VvY29kZSh7CiAgICAgICAgJ2FkZHJlc3MnOiBjYWZlQWRkcmVzcwogICAgICB9LCBmdW5jdGlvbiAocmVzdWx0cywgc3RhdHVzKSB7CiAgICAgICAgaWYgKHN0YXR1cyA9PT0gd2luZG93Lmdvb2dsZS5tYXBzLkdlb2NvZGVyU3RhdHVzLk9LKSB7CiAgICAgICAgICB2YXIgbG9jYXRpb24gPSByZXN1bHRzWzBdLmdlb21ldHJ5LmxvY2F0aW9uOwogICAgICAgICAgX3RoaXMuY2VudGVyTG9jYXRpb24gPSBsb2NhdGlvbjsKICAgICAgICAgIF90aGlzLnpvb20gPSAxNzsKICAgICAgICAgIFZ1ZVNjcm9sbFRvLnNjcm9sbFRvKCcjbWFwJyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlCiAgICAgICAgICBjb25zb2xlLndhcm4oJ0dlb2NvZGUgd2FzIG5vdCBzdWNjZXNzZnVsIGZvciB0aGUgZm9sbG93aW5nIHJlYXNvbjogJyArIHN0YXR1cyk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHB1c2hMb2NhdGlvbjogZnVuY3Rpb24gcHVzaExvY2F0aW9uKGxvY2F0aW9uKSB7CiAgICAgIHRoaXMubWFya2VyTG9jYXRpb25zLnB1c2gobG9jYXRpb24pOwogICAgfSwKICAgIGdldE1hcE1hcmtlcnM6IGZ1bmN0aW9uIGdldE1hcE1hcmtlcnMoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgaWYgKCF0aGlzLm1hcExvYWRlZCB8fCB0aGlzLm1hcmtlcnNMb2FkZWQpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMuY2FmZXNBZGRyZXNzZXMubWFwKGZ1bmN0aW9uIChjYWZlQWRkcmVzcykgewogICAgICAgIHZhciBnZW9jb2RlciA9IG5ldyB3aW5kb3cuZ29vZ2xlLm1hcHMuR2VvY29kZXIoKTsKICAgICAgICBnZW9jb2Rlci5nZW9jb2RlKHsKICAgICAgICAgICdhZGRyZXNzJzogY2FmZUFkZHJlc3MKICAgICAgICB9LCBmdW5jdGlvbiAocmVzdWx0cywgc3RhdHVzKSB7CiAgICAgICAgICBpZiAoc3RhdHVzID09PSB3aW5kb3cuZ29vZ2xlLm1hcHMuR2VvY29kZXJTdGF0dXMuT0spIHsKICAgICAgICAgICAgdmFyIGxvY2F0aW9uID0gcmVzdWx0c1swXS5nZW9tZXRyeS5sb2NhdGlvbjsKCiAgICAgICAgICAgIF90aGlzMi5wdXNoTG9jYXRpb24obG9jYXRpb24pOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGUKICAgICAgICAgICAgY29uc29sZS53YXJuKCdHZW9jb2RlIHdhcyBub3Qgc3VjY2Vzc2Z1bCBmb3IgdGhlIGZvbGxvd2luZyByZWFzb246ICcgKyBzdGF0dXMpOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICB0aGlzLm1hcCA9IHRoaXMuJHJlZnMubWFwLm1hcE9iamVjdDsKICAgIHRoaXMuJHJlZnMubWFwLiRtYXBDcmVhdGVkLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICBfdGhpczMubWFwTG9hZGVkID0gdHJ1ZTsKICAgIH0pOwogIH0KfTs="},{"version":3,"sources":["ContactMap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <gmap-map \n        class=\"map\" \n        :style=\"mapStyle\" \n        :center=\"centerLocation\" \n        :zoom=\"zoom\" \n        id=\"map\" \n        ref=\"map\"\n    >\n        <gmap-marker \n            v-for=\"(location, index) in markerLocations\" \n            v-if=\"mapLoaded\" \n            :key=\"index\" \n            :position=\"location\"\n        />\n    </gmap-map>\n\n</template>\n\n<script>\nimport VueScrollTo from 'vue-scrollto'\n\nexport default {\n  name: 'ContactMap',\n  props: ['cafesAddresses', 'focusOnAddress'],\n  data: () => ({\n    mapStyle: {\n      position: 'relative',\n      width: '100%',\n      height: '400px'\n    },\n    markerLocations: [],\n    centerLocation: {lat: 40.854885, lng: -88.081807},\n    zoom: 4,\n    mapLoaded: false,\n  }),\n  computed: {\n    markersLoaded: function(){\n      return this.markerLocations.length > 0;\n    }\n  },\n  watch: {\n    cafesAddresses: function () {\n      this.getMapMarkers();\n    },\n    mapLoaded: function () {\n      this.getMapMarkers();\n\n    },\n    focusOnAddress: function () {\n      let geocoder = new window.google.maps.Geocoder();\n      let cafeAddress = this.focusOnAddress;\n      geocoder.geocode({'address': cafeAddress}, (results, status) => {\n        if (status === window.google.maps.GeocoderStatus.OK) {\n          let location = results[0].geometry.location;\n          this.centerLocation = location;\n          this.zoom = 17;\n          VueScrollTo.scrollTo('#map');\n        } else {\n          // eslint-disable-next-line no-console\n          console.warn('Geocode was not successful for the following reason: ' + status);\n        }\n      })\n    }\n  },\n  methods: {\n    pushLocation(location) {\n      this.markerLocations.push(location);\n    },\n    getMapMarkers() {\n      if (!this.mapLoaded || this.markersLoaded) {\n        return;\n      }\n      this.cafesAddresses.map(cafeAddress => {\n        let geocoder = new window.google.maps.Geocoder();\n        geocoder.geocode({'address': cafeAddress}, (results, status) => {\n          if (status === window.google.maps.GeocoderStatus.OK) {\n            let location = results[0].geometry.location;\n            this.pushLocation(location);\n          } else {\n            // eslint-disable-next-line no-console\n            console.warn('Geocode was not successful for the following reason: ' + status);\n          }\n        })\n      });\n    }\n  },\n  mounted: function () {\n    this.map = this.$refs.map.mapObject;\n    this.$refs.map.$mapCreated.then(() => {\n      this.mapLoaded = true\n    })\n  },\n}\n</script>"],"sourceRoot":"src/components"}]}