{"remainingRequest":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/babel-loader/lib/index.js!/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/src/components/TasteOurCoffee.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/src/components/TasteOurCoffee.vue","mtime":1638913610185},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/package.json","mtime":1638913952165},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1638914716023},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/babel-loader/lib/index.js","mtime":1638914724198},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1638914716023},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/vue-loader/lib/index.js","mtime":1638914719606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LmZ1bmN0aW9uLm5hbWUiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBDYWZlU3RvcmUgfSBmcm9tICIuLi9TdG9yZXMvQ2FmZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAndGFzdGUtb3VyLWNvZmZlZScsCiAgcHJvcHM6IFsnbGFuZ3VhZ2UnXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2FmZXM6IFtdLAogICAgICBjYWZlc0xpbms6ICIiLmNvbmNhdCh0aGlzLmxhbmd1YWdlLCAiL2NhZmVzIikKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgY2FmZXNEYXRhOiBmdW5jdGlvbiBjYWZlc0RhdGEoKSB7CiAgICAgIHJldHVybiB0aGlzLmNhZmVzLm1hcChmdW5jdGlvbiAoY2FmZSkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBuYW1lOiBjYWZlLnN5c3RlbS5uYW1lLAogICAgICAgICAgaW1hZ2VMaW5rOiBjYWZlLnBob3RvLnZhbHVlWzBdLnVybAogICAgICAgIH07CiAgICAgIH0pOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGxhbmd1YWdlOiBmdW5jdGlvbiBsYW5ndWFnZSgpIHsKICAgICAgQ2FmZVN0b3JlLnByb3ZpZGVDb21wYW55Q2FmZXModGhpcy5sYW5ndWFnZSk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBvbkNoYW5nZTogZnVuY3Rpb24gb25DaGFuZ2UoKSB7CiAgICAgIHRoaXMuY2FmZXMgPSBDYWZlU3RvcmUuZ2V0Q29tcGFueUNhZmVzKHRoaXMubGFuZ3VhZ2UpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIENhZmVTdG9yZS5zdWJzY3JpYmUoKTsKICAgIENhZmVTdG9yZS5hZGRDaGFuZ2VMaXN0ZW5lcih0aGlzLm9uQ2hhbmdlKTsKICAgIENhZmVTdG9yZS5wcm92aWRlQ29tcGFueUNhZmVzKHRoaXMubGFuZ3VhZ2UpOwogICAgdGhpcy5jYWZlcyA9IENhZmVTdG9yZS5nZXRDb21wYW55Q2FmZXModGhpcy5sYW5ndWFnZSk7CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkgewogICAgQ2FmZVN0b3JlLnVuc3Vic2NyaWJlKCk7CiAgfSwKICBkZXN0cm95ZWQ6IGZ1bmN0aW9uIGRlc3Ryb3llZCgpIHsKICAgIENhZmVTdG9yZS5yZW1vdmVDaGFuZ2VMaXN0ZW5lcih0aGlzLm9uQ2hhbmdlKTsKICB9Cn07"},{"version":3,"sources":["TasteOurCoffee.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,SAAA,SAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,KAAA,EAAA,CAAA,UAAA,CAFA;AAGA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,SAAA,YAAA,KAAA,QAAA;AAFA,KAAA;AAIA,GARA;AASA,EAAA,QAAA,EAAA;AACA,IAAA,SAAA,EAAA,qBAAA;AACA,aAAA,KAAA,KAAA,CAAA,GAAA,CAAA,UAAA,IAAA;AAAA,eAAA;AACA,UAAA,IAAA,EAAA,IAAA,CAAA,MAAA,CAAA,IADA;AAEA,UAAA,SAAA,EAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,EAAA;AAFA,SAAA;AAAA,OAAA,CAAA;AAIA;AANA,GATA;AAiBA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA,oBAAA;AACA,MAAA,SAAA,CAAA,mBAAA,CAAA,KAAA,QAAA;AACA;AAHA,GAjBA;AAsBA,EAAA,OAAA,EAAA;AACA,IAAA,QAAA,EAAA,oBAAA;AACA,WAAA,KAAA,GAAA,SAAA,CAAA,eAAA,CAAA,KAAA,QAAA,CAAA;AACA;AAHA,GAtBA;AA2BA,EAAA,OAAA,EAAA,mBAAA;AACA,IAAA,SAAA,CAAA,SAAA;AACA,IAAA,SAAA,CAAA,iBAAA,CAAA,KAAA,QAAA;AACA,IAAA,SAAA,CAAA,mBAAA,CAAA,KAAA,QAAA;AACA,SAAA,KAAA,GAAA,SAAA,CAAA,eAAA,CAAA,KAAA,QAAA,CAAA;AACA,GAhCA;AAiCA,EAAA,aAAA,EAAA,yBAAA;AACA,IAAA,SAAA,CAAA,WAAA;AACA,GAnCA;AAoCA,EAAA,SAAA,EAAA,qBAAA;AACA,IAAA,SAAA,CAAA,oBAAA,CAAA,KAAA,QAAA;AACA;AAtCA,CAAA","sourcesContent":["<template>\n    <div class=\"row\">\n        <div>\n            <h1 class=\"title-tab\">{{$t('TasteOurCoffee.title')}}</h1>\n        </div>\n        <div\n            v-for=\"(cafe, index) in cafesData\"\n            class=\"col-xs-6 col-md-3\"\n            :key=\"index\"\n        >\n            <div>\n                <router-link\n                    :to=\"cafesLink\"\n                    class=\"ourcoffee-tile-link\"\n                >\n                    <h2 class=\"ourcoffee-tile-text center-text\">{{cafe.name}}</h2>\n                    <span class=\"cafe-overlay\"> </span>\n                    <img\n                        v-bind:alt=\"cafe.name\"\n                        class=\"ourcoffee-tile-image\"\n                        v-bind:src=\"cafe.imageLink\"\n                        v-bind:title=\"cafe.name\"\n                    />\n                </router-link>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { CafeStore } from '../Stores/Cafe'\n\nexport default {\n  name: 'taste-our-coffee',\n  props: ['language'],\n  data: function () {\n    return {\n      cafes: [],\n      cafesLink: `${this.language}/cafes`,\n    }\n  },\n  computed: {\n    cafesData: function(){\n      return this.cafes.map(cafe => ({\n        name: cafe.system.name,\n        imageLink: cafe.photo.value[0].url,\n      }))\n    },\n  },\n  watch: {\n    language: function(){\n      CafeStore.provideCompanyCafes(this.language);\n    }\n  },\n  methods: {\n    onChange: function(){\n      this.cafes = CafeStore.getCompanyCafes(this.language);\n    }\n  },\n  mounted: function() {\n    CafeStore.subscribe();\n    CafeStore.addChangeListener(this.onChange);\n    CafeStore.provideCompanyCafes(this.language);\n    this.cafes = CafeStore.getCompanyCafes(this.language);\n  },\n  beforeDestroy: function() {\n    CafeStore.unsubscribe();\n  },\n  destroyed: function(){\n    CafeStore.removeChangeListener(this.onChange);\n  }\n}\n</script>\n"],"sourceRoot":"src/components"}]}