{"remainingRequest":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/babel-loader/lib/index.js!/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/src/Stores/Cafe.js","dependencies":[{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/src/Stores/Cafe.js","mtime":1638913610169},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/package.json","mtime":1638913952165},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1638914716023},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/babel-loader/lib/index.js","mtime":1638914724198},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/eslint-loader/index.js","mtime":1638914716333}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvc2lkaGFydGhzaXZhL0Rlc2t0b3AvRHVtbXkva29udGVudC1zYW1wbGUtYXBwLXZ1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUtY29yZWpzMi9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL1VzZXJzL3NpZGhhcnRoc2l2YS9EZXNrdG9wL0R1bW15L2tvbnRlbnQtc2FtcGxlLWFwcC12dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczIvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gZnJvbSAiL1VzZXJzL3NpZGhhcnRoc2l2YS9EZXNrdG9wL0R1bW15L2tvbnRlbnQtc2FtcGxlLWFwcC12dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczIvaGVscGVycy9lc20vcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiI7CmltcG9ydCBfZ2V0UHJvdG90eXBlT2YgZnJvbSAiL1VzZXJzL3NpZGhhcnRoc2l2YS9EZXNrdG9wL0R1bW15L2tvbnRlbnQtc2FtcGxlLWFwcC12dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczIvaGVscGVycy9lc20vZ2V0UHJvdG90eXBlT2YiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIi9Vc2Vycy9zaWRoYXJ0aHNpdmEvRGVza3RvcC9EdW1teS9rb250ZW50LXNhbXBsZS1hcHAtdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMyL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZSI7CmltcG9ydCB7IENsaWVudCB9IGZyb20gIi4uL0NsaWVudC5qcyI7CmltcG9ydCB7IHRha2VVbnRpbCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJzsKaW1wb3J0IHsgaW5pdExhbmd1YWdlQ29kZU9iamVjdCwgZGVmYXVsdExhbmd1YWdlLCBsYW5ndWFnZUNvZGVzIH0gZnJvbSAiLi4vVXRpbGl0aWVzL0xhbmd1YWdlQ29kZXMiOwppbXBvcnQgQmFzZVN0b3JlIGZyb20gIi4vQmFzZSI7Cgp2YXIgcmVzZXRTdG9yZSA9IGZ1bmN0aW9uIHJlc2V0U3RvcmUoKSB7CiAgdmFyIGxhbmd1YWdlSW5pdGlhbGl6ZWQgPSB7fTsKICBsYW5ndWFnZUNvZGVzLmZvckVhY2goZnVuY3Rpb24gKGxhbmd1YWdlKSB7CiAgICBsYW5ndWFnZUluaXRpYWxpemVkW2xhbmd1YWdlXSA9IGZhbHNlOwogIH0pOwogIHJldHVybiB7CiAgICBjYWZlczogaW5pdExhbmd1YWdlQ29kZU9iamVjdCgpLAogICAgbGFuZ3VhZ2VJbml0aWFsaXplZDogbGFuZ3VhZ2VJbml0aWFsaXplZAogIH07Cn07Cgp2YXIgX3Jlc2V0U3RvcmUgPSByZXNldFN0b3JlKCksCiAgICBjYWZlcyA9IF9yZXNldFN0b3JlLmNhZmVzLAogICAgbGFuZ3VhZ2VJbml0aWFsaXplZCA9IF9yZXNldFN0b3JlLmxhbmd1YWdlSW5pdGlhbGl6ZWQ7Cgp2YXIgQ2FmZSA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKF9CYXNlU3RvcmUpIHsKICBfaW5oZXJpdHMoQ2FmZSwgX0Jhc2VTdG9yZSk7CgogIGZ1bmN0aW9uIENhZmUoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ2FmZSk7CgogICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9nZXRQcm90b3R5cGVPZihDYWZlKS5jYWxsKHRoaXMpKTsKICB9CgogIF9jcmVhdGVDbGFzcyhDYWZlLCBbewogICAga2V5OiAiZmV0Y2hDYWZlcyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZmV0Y2hDYWZlcyhsYW5ndWFnZSkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgaWYgKGxhbmd1YWdlSW5pdGlhbGl6ZWRbbGFuZ3VhZ2VdKSB7CiAgICAgICAgdGhpcy5ub3RpZnlDaGFuZ2UobGFuZ3VhZ2UpOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdmFyIHF1ZXJ5ID0gQ2xpZW50Lml0ZW1zKCkudHlwZSgnY2FmZScpLm9yZGVyUGFyYW1ldGVyKCdzeXN0ZW0ubmFtZScpOwoKICAgICAgaWYgKGxhbmd1YWdlKSB7CiAgICAgICAgcXVlcnkubGFuZ3VhZ2VQYXJhbWV0ZXIobGFuZ3VhZ2UpOwogICAgICB9CgogICAgICBxdWVyeS50b09ic2VydmFibGUoKS5waXBlKHRha2VVbnRpbCh0aGlzLm9ic2VydmFibGVVbnN1YnNjcmliZSkpLnN1YnNjcmliZShmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBpZiAobGFuZ3VhZ2UpIHsKICAgICAgICAgIGNhZmVzW2xhbmd1YWdlXSA9IHJlc3BvbnNlLml0ZW1zOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjYWZlc1tkZWZhdWx0TGFuZ3VhZ2VdID0gcmVzcG9uc2UuaXRlbXM7CiAgICAgICAgfQoKICAgICAgICBfdGhpcy5ub3RpZnlDaGFuZ2UobGFuZ3VhZ2UpOwoKICAgICAgICBsYW5ndWFnZUluaXRpYWxpemVkW2xhbmd1YWdlXSA9IHRydWU7CiAgICAgIH0pOwogICAgfSAvLyBBY3Rpb25zCgogIH0sIHsKICAgIGtleTogInByb3ZpZGVQYXJ0bmVyQ2FmZXMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHByb3ZpZGVQYXJ0bmVyQ2FmZXMobGFuZ3VhZ2UpIHsKICAgICAgdGhpcy5mZXRjaENhZmVzKGxhbmd1YWdlKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJwcm92aWRlQ29tcGFueUNhZmVzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBwcm92aWRlQ29tcGFueUNhZmVzKGxhbmd1YWdlKSB7CiAgICAgIHRoaXMuZmV0Y2hDYWZlcyhsYW5ndWFnZSk7CiAgICB9IC8vIE1ldGhvZHMKCiAgfSwgewogICAga2V5OiAiZ2V0UGFydG5lckNhZmVzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRQYXJ0bmVyQ2FmZXMobGFuZ3VhZ2UpIHsKICAgICAgcmV0dXJuIGNhZmVzW2xhbmd1YWdlXS5maWx0ZXIoZnVuY3Rpb24gKGNhZmUpIHsKICAgICAgICByZXR1cm4gY2FmZS5jb3VudHJ5LnZhbHVlICE9PSAnVVNBJzsKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0Q29tcGFueUNhZmVzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRDb21wYW55Q2FmZXMobGFuZ3VhZ2UpIHsKICAgICAgcmV0dXJuIGNhZmVzW2xhbmd1YWdlXS5maWx0ZXIoZnVuY3Rpb24gKGNhZmUpIHsKICAgICAgICByZXR1cm4gY2FmZS5jb3VudHJ5LnZhbHVlID09PSAnVVNBJzsKICAgICAgfSk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gQ2FmZTsKfShCYXNlU3RvcmUpOwoKdmFyIENhZmVTdG9yZSA9IG5ldyBDYWZlKCk7CmV4cG9ydCB7IENhZmVTdG9yZSwgcmVzZXRTdG9yZSB9Ow=="},{"version":3,"sources":["/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/src/Stores/Cafe.js"],"names":["Client","takeUntil","initLanguageCodeObject","defaultLanguage","languageCodes","BaseStore","resetStore","languageInitialized","forEach","language","cafes","Cafe","notifyChange","query","items","type","orderParameter","languageParameter","toObservable","pipe","observableUnsubscribe","subscribe","response","fetchCafes","filter","cafe","country","value","CafeStore"],"mappings":";;;;;;AAAA,SAASA,MAAT;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,sBAAT,EAAiCC,eAAjC,EAAkDC,aAAlD;AACA,OAAOC,SAAP;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,MAAIC,mBAAmB,GAAG,EAA1B;AACAH,EAAAA,aAAa,CAACI,OAAd,CAAsB,UAACC,QAAD,EAAc;AAClCF,IAAAA,mBAAmB,CAACE,QAAD,CAAnB,GAAgC,KAAhC;AACD,GAFD;AAIA,SAAO;AACLC,IAAAA,KAAK,EAAER,sBAAsB,EADxB;AAELK,IAAAA,mBAAmB,EAAEA;AAFhB,GAAP;AAID,CAVD;;kBAWqCD,UAAU,E;IAAzCI,K,eAAAA,K;IAAOH,mB,eAAAA,mB;;IAEPI,I;;;;;AACJ,kBAAc;AAAA;;AAAA;AAEb;;;;+BAEUF,Q,EAAU;AAAA;;AACnB,UAAIF,mBAAmB,CAACE,QAAD,CAAvB,EAAmC;AACjC,aAAKG,YAAL,CAAkBH,QAAlB;AACA;AACD;;AAED,UAAII,KAAK,GAAGb,MAAM,CAACc,KAAP,GACTC,IADS,CACJ,MADI,EAETC,cAFS,CAEM,aAFN,CAAZ;;AAIA,UAAIP,QAAJ,EAAc;AACZI,QAAAA,KAAK,CAACI,iBAAN,CAAwBR,QAAxB;AACD;;AAEDI,MAAAA,KAAK,CAACK,YAAN,GACGC,IADH,CACQlB,SAAS,CAAC,KAAKmB,qBAAN,CADjB,EAEGC,SAFH,CAEa,UAAAC,QAAQ,EAAI;AACrB,YAAIb,QAAJ,EAAc;AACZC,UAAAA,KAAK,CAACD,QAAD,CAAL,GAAkBa,QAAQ,CAACR,KAA3B;AACD,SAFD,MAEO;AACLJ,UAAAA,KAAK,CAACP,eAAD,CAAL,GAAyBmB,QAAQ,CAACR,KAAlC;AACD;;AACD,QAAA,KAAI,CAACF,YAAL,CAAkBH,QAAlB;;AACAF,QAAAA,mBAAmB,CAACE,QAAD,CAAnB,GAAgC,IAAhC;AACD,OAVH;AAWD,K,CAED;;;;wCACoBA,Q,EAAU;AAC5B,WAAKc,UAAL,CAAgBd,QAAhB;AACD;;;wCAEmBA,Q,EAAU;AAC5B,WAAKc,UAAL,CAAgBd,QAAhB;AACD,K,CAED;;;;oCACgBA,Q,EAAU;AACxB,aAAOC,KAAK,CAACD,QAAD,CAAL,CAAgBe,MAAhB,CAAuB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,OAAL,CAAaC,KAAb,KAAuB,KAAjC;AAAA,OAAvB,CAAP;AACD;;;oCAEelB,Q,EAAU;AACxB,aAAOC,KAAK,CAACD,QAAD,CAAL,CAAgBe,MAAhB,CAAuB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,OAAL,CAAaC,KAAb,KAAuB,KAAjC;AAAA,OAAvB,CAAP;AACD;;;;EAhDgBtB,S;;AAmDnB,IAAIuB,SAAS,GAAG,IAAIjB,IAAJ,EAAhB;AAEA,SAASiB,SAAT,EAAoBtB,UAApB","sourcesContent":["import { Client } from '../Client.js';\nimport { takeUntil } from 'rxjs/operators';\nimport { initLanguageCodeObject, defaultLanguage, languageCodes } from '../Utilities/LanguageCodes';\nimport BaseStore from './Base';\n\nconst resetStore = () => {\n  let languageInitialized = {};\n  languageCodes.forEach((language) => {\n    languageInitialized[language] = false;\n  });\n\n  return {\n    cafes: initLanguageCodeObject(),\n    languageInitialized: languageInitialized\n  }\n};\nlet { cafes, languageInitialized } = resetStore();\n\nclass Cafe extends BaseStore {\n  constructor() {\n    super();\n  }\n\n  fetchCafes(language) {\n    if (languageInitialized[language]) {\n      this.notifyChange(language);\n      return;\n    }\n\n    let query = Client.items()\n      .type('cafe')\n      .orderParameter('system.name');\n\n    if (language) {\n      query.languageParameter(language);\n    }\n\n    query.toObservable()\n      .pipe(takeUntil(this.observableUnsubscribe))\n      .subscribe(response => {\n        if (language) {\n          cafes[language] = response.items;\n        } else {\n          cafes[defaultLanguage] = response.items;\n        }\n        this.notifyChange(language);\n        languageInitialized[language] = true;\n      });\n  }\n\n  // Actions\n  providePartnerCafes(language) {\n    this.fetchCafes(language);\n  }\n\n  provideCompanyCafes(language) {\n    this.fetchCafes(language);\n  }\n\n  // Methods\n  getPartnerCafes(language) {\n    return cafes[language].filter((cafe) => cafe.country.value !== 'USA');\n  }\n\n  getCompanyCafes(language) {\n    return cafes[language].filter((cafe) => cafe.country.value === 'USA');\n  }\n}\n\nlet CafeStore = new Cafe();\n\nexport { CafeStore, resetStore };"]}]}