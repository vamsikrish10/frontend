{"remainingRequest":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/babel-loader/lib/index.js!/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/src/Stores/Fact.js","dependencies":[{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/src/Stores/Fact.js","mtime":1638913610169},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/package.json","mtime":1638913952165},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1638914716023},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/babel-loader/lib/index.js","mtime":1638914724198},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/eslint-loader/index.js","mtime":1638914716333}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvc2lkaGFydGhzaXZhL0Rlc2t0b3AvRHVtbXkva29udGVudC1zYW1wbGUtYXBwLXZ1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUtY29yZWpzMi9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL1VzZXJzL3NpZGhhcnRoc2l2YS9EZXNrdG9wL0R1bW15L2tvbnRlbnQtc2FtcGxlLWFwcC12dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczIvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gZnJvbSAiL1VzZXJzL3NpZGhhcnRoc2l2YS9EZXNrdG9wL0R1bW15L2tvbnRlbnQtc2FtcGxlLWFwcC12dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczIvaGVscGVycy9lc20vcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiI7CmltcG9ydCBfZ2V0UHJvdG90eXBlT2YgZnJvbSAiL1VzZXJzL3NpZGhhcnRoc2l2YS9EZXNrdG9wL0R1bW15L2tvbnRlbnQtc2FtcGxlLWFwcC12dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczIvaGVscGVycy9lc20vZ2V0UHJvdG90eXBlT2YiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIi9Vc2Vycy9zaWRoYXJ0aHNpdmEvRGVza3RvcC9EdW1teS9rb250ZW50LXNhbXBsZS1hcHAtdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMyL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IHsgQ2xpZW50IH0gZnJvbSAiLi4vQ2xpZW50LmpzIjsKaW1wb3J0IHsgdGFrZVVudGlsIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnOwppbXBvcnQgeyBpbml0TGFuZ3VhZ2VDb2RlT2JqZWN0LCBkZWZhdWx0TGFuZ3VhZ2UgfSBmcm9tICIuLi9VdGlsaXRpZXMvTGFuZ3VhZ2VDb2RlcyI7CmltcG9ydCBCYXNlU3RvcmUgZnJvbSAiLi9CYXNlIjsKCnZhciByZXNldFN0b3JlID0gZnVuY3Rpb24gcmVzZXRTdG9yZSgpIHsKICByZXR1cm4gewogICAgZmFjdHM6IGluaXRMYW5ndWFnZUNvZGVPYmplY3QoKQogIH07Cn07Cgp2YXIgX3Jlc2V0U3RvcmUgPSByZXNldFN0b3JlKCksCiAgICBmYWN0cyA9IF9yZXNldFN0b3JlLmZhY3RzOwoKdmFyIEZhY3QgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uIChfQmFzZVN0b3JlKSB7CiAgX2luaGVyaXRzKEZhY3QsIF9CYXNlU3RvcmUpOwoKICBmdW5jdGlvbiBGYWN0KCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEZhY3QpOwoKICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfZ2V0UHJvdG90eXBlT2YoRmFjdCkuY2FsbCh0aGlzKSk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoRmFjdCwgW3sKICAgIGtleTogImZldGNoRmFjdHMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGZldGNoRmFjdHMobGFuZ3VhZ2UpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBxdWVyeSA9IENsaWVudC5pdGVtKCdhYm91dF91cycpOwoKICAgICAgaWYgKGxhbmd1YWdlKSB7CiAgICAgICAgcXVlcnkubGFuZ3VhZ2VQYXJhbWV0ZXIobGFuZ3VhZ2UpOwogICAgICB9CgogICAgICBxdWVyeS50b09ic2VydmFibGUoKS5waXBlKHRha2VVbnRpbCh0aGlzLm9ic2VydmFibGVVbnN1YnNjcmliZSkpLnN1YnNjcmliZShmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBpZiAobGFuZ3VhZ2UpIHsKICAgICAgICAgIGZhY3RzW2xhbmd1YWdlXSA9IHJlc3BvbnNlLml0ZW0uZmFjdHMudmFsdWU7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGZhY3RzW2RlZmF1bHRMYW5ndWFnZV0gPSByZXNwb25zZS5pdGVtLmZhY3RzLnZhbHVlOwogICAgICAgIH0KCiAgICAgICAgX3RoaXMubm90aWZ5Q2hhbmdlKCk7CiAgICAgIH0pOwogICAgfSAvLyBBY3Rpb25zCgogIH0sIHsKICAgIGtleTogInByb3ZpZGVGYWN0cyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcHJvdmlkZUZhY3RzKGxhbmd1YWdlKSB7CiAgICAgIHRoaXMuZmV0Y2hGYWN0cyhsYW5ndWFnZSk7CiAgICB9IC8vIE1ldGhvZHMKCiAgfSwgewogICAga2V5OiAiZ2V0RmFjdHMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldEZhY3RzKGxhbmd1YWdlKSB7CiAgICAgIHJldHVybiBmYWN0c1tsYW5ndWFnZV07CiAgICB9CiAgfV0pOwoKICByZXR1cm4gRmFjdDsKfShCYXNlU3RvcmUpOwoKdmFyIEZhY3RTdG9yZSA9IG5ldyBGYWN0KCk7CmV4cG9ydCB7IEZhY3RTdG9yZSwgcmVzZXRTdG9yZSB9Ow=="},{"version":3,"sources":["/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/src/Stores/Fact.js"],"names":["Client","takeUntil","initLanguageCodeObject","defaultLanguage","BaseStore","resetStore","facts","Fact","language","query","item","languageParameter","toObservable","pipe","observableUnsubscribe","subscribe","response","value","notifyChange","fetchFacts","FactStore"],"mappings":";;;;;AAAA,SAASA,MAAT;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,sBAAT,EAAiCC,eAAjC;AACA,OAAOC,SAAP;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAO;AACxBC,IAAAA,KAAK,EAAEJ,sBAAsB;AADL,GAAP;AAAA,CAAnB;;kBAGgBG,UAAU,E;IAApBC,K,eAAAA,K;;IAEAC,I;;;;;AACJ,kBAAc;AAAA;;AAAA;AAEb;;;;+BAEUC,Q,EAAU;AAAA;;AACnB,UAAIC,KAAK,GAAGT,MAAM,CAACU,IAAP,CAAY,UAAZ,CAAZ;;AAEA,UAAIF,QAAJ,EAAc;AACZC,QAAAA,KAAK,CAACE,iBAAN,CAAwBH,QAAxB;AACD;;AAEDC,MAAAA,KAAK,CAACG,YAAN,GACGC,IADH,CACQZ,SAAS,CAAC,KAAKa,qBAAN,CADjB,EAEGC,SAFH,CAEa,UAAAC,QAAQ,EAAI;AACrB,YAAIR,QAAJ,EAAc;AACZF,UAAAA,KAAK,CAACE,QAAD,CAAL,GAAkBQ,QAAQ,CAACN,IAAT,CAAcJ,KAAd,CAAoBW,KAAtC;AACD,SAFD,MAEO;AACLX,UAAAA,KAAK,CAACH,eAAD,CAAL,GAAyBa,QAAQ,CAACN,IAAT,CAAcJ,KAAd,CAAoBW,KAA7C;AACD;;AACD,QAAA,KAAI,CAACC,YAAL;AACD,OATH;AAUD,K,CAED;;;;iCACaV,Q,EAAU;AACrB,WAAKW,UAAL,CAAgBX,QAAhB;AACD,K,CAED;;;;6BACSA,Q,EAAU;AACjB,aAAOF,KAAK,CAACE,QAAD,CAAZ;AACD;;;;EAhCgBJ,S;;AAmCnB,IAAIgB,SAAS,GAAG,IAAIb,IAAJ,EAAhB;AAEA,SAASa,SAAT,EAAoBf,UAApB","sourcesContent":["import { Client } from '../Client.js';\nimport { takeUntil } from 'rxjs/operators';\nimport { initLanguageCodeObject, defaultLanguage } from '../Utilities/LanguageCodes';\nimport BaseStore from './Base';\n\nconst resetStore = () => ({\n  facts: initLanguageCodeObject()\n});\nlet { facts } = resetStore();\n\nclass Fact extends BaseStore {\n  constructor() {\n    super();\n  }\n\n  fetchFacts(language) {\n    var query = Client.item('about_us');\n\n    if (language) {\n      query.languageParameter(language);\n    }\n\n    query.toObservable()\n      .pipe(takeUntil(this.observableUnsubscribe))\n      .subscribe(response => {\n        if (language) {\n          facts[language] = response.item.facts.value;\n        } else {\n          facts[defaultLanguage] = response.item.facts.value;\n        }\n        this.notifyChange();\n      });\n  }\n\n  // Actions\n  provideFacts(language) {\n    this.fetchFacts(language);\n  }\n\n  // Methods\n  getFacts(language) {\n    return facts[language];\n  }\n}\n\nlet FactStore = new Fact();\n\nexport { FactStore, resetStore }"]}]}