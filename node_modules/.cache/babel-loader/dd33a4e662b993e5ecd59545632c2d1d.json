{"remainingRequest":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/babel-loader/lib/index.js!/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/src/components/CoffeeFilter.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/src/components/CoffeeFilter.vue","mtime":1638913610178},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/package.json","mtime":1638913952165},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1638914716023},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/babel-loader/lib/index.js","mtime":1638914724198},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1638914716023},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/vue-loader/lib/index.js","mtime":1638914719606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM3LmFycmF5LmluY2x1ZGVzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5mdW5jdGlvbi5uYW1lIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgQ29mZmVlU3RvcmUgfSBmcm9tICIuLi9TdG9yZXMvQ29mZmVlIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdDb2ZmZWVGaWx0ZXInLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmaWx0ZXI6IG51bGwsCiAgICAgIHByb2Nlc3NpbmdzOiBbXSwKICAgICAgcHJvZHVjdFN0YXR1c2VzOiBbXQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBwcm9jZXNzaW5nc0RhdGE6IGZ1bmN0aW9uIHByb2Nlc3NpbmdzRGF0YSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiB0aGlzLnByb2Nlc3NpbmdzLm1hcChmdW5jdGlvbiAocHJvY2Vzc2luZykgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBjb2RlbmFtZTogcHJvY2Vzc2luZy5jb2RlbmFtZSwKICAgICAgICAgIG5hbWU6IHByb2Nlc3NpbmcubmFtZSwKICAgICAgICAgIGNoZWNrZWQ6IF90aGlzLmZpbHRlci5wcm9jZXNzaW5ncy5pbmNsdWRlcyhwcm9jZXNzaW5nLmNvZGVuYW1lKQogICAgICAgIH07CiAgICAgIH0pOwogICAgfSwKICAgIHByb2R1Y3RTdGF0dXNlc0RhdGE6IGZ1bmN0aW9uIHByb2R1Y3RTdGF0dXNlc0RhdGEoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIHRoaXMucHJvZHVjdFN0YXR1c2VzLm1hcChmdW5jdGlvbiAocHJvZHVjdFN0YXR1cykgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBjb2RlbmFtZTogcHJvZHVjdFN0YXR1cy5jb2RlbmFtZSwKICAgICAgICAgIGNoZWNrZWQ6IF90aGlzMi5maWx0ZXIucHJvZHVjdFN0YXR1c2VzLmluY2x1ZGVzKHByb2R1Y3RTdGF0dXMuY29kZW5hbWUpLAogICAgICAgICAgbmFtZTogcHJvZHVjdFN0YXR1cy5uYW1lCiAgICAgICAgfTsKICAgICAgfSk7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgbGFuZ3VhZ2U6IGZ1bmN0aW9uIGxhbmd1YWdlKCkgewogICAgICBDb2ZmZWVTdG9yZS5wcm92aWRlUHJvY2Vzc2luZ3MoKTsKICAgICAgQ29mZmVlU3RvcmUucHJvdmlkZVByb2R1Y3RTdGF0dXNlcygpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgcHJvY2Vzc2luZ09uQ2hhbmdlOiBmdW5jdGlvbiBwcm9jZXNzaW5nT25DaGFuZ2UoY29kZW5hbWUpIHsKICAgICAgdGhpcy5maWx0ZXIudG9nZ2xlUHJvY2Vzc2luZyhjb2RlbmFtZSk7CiAgICAgIENvZmZlZVN0b3JlLnNldEZpbHRlcih0aGlzLmZpbHRlcik7CiAgICB9LAogICAgcHJvZHVjdFN0YXR1c09uQ2hhbmdlOiBmdW5jdGlvbiBwcm9kdWN0U3RhdHVzT25DaGFuZ2UoY29kZW5hbWUpIHsKICAgICAgdGhpcy5maWx0ZXIudG9nZ2xlUHJvZHVjdFN0YXR1cyhjb2RlbmFtZSk7CiAgICAgIENvZmZlZVN0b3JlLnNldEZpbHRlcih0aGlzLmZpbHRlcik7CiAgICB9LAogICAgb25DaGFuZ2U6IGZ1bmN0aW9uIG9uQ2hhbmdlKCkgewogICAgICB0aGlzLnByb2Nlc3NpbmdzID0gQ29mZmVlU3RvcmUuZ2V0UHJvY2Vzc2luZ3MoKTsKICAgICAgdGhpcy5wcm9kdWN0U3RhdHVzZXMgPSBDb2ZmZWVTdG9yZS5nZXRQcm9kdWN0U3RhdHVzZXMoKTsKICAgICAgdGhpcy5maWx0ZXIgPSBDb2ZmZWVTdG9yZS5nZXRGaWx0ZXIoKTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICBDb2ZmZWVTdG9yZS5zdWJzY3JpYmUoKTsKICAgIENvZmZlZVN0b3JlLmFkZENoYW5nZUxpc3RlbmVyKHRoaXMub25DaGFuZ2UpOwogICAgQ29mZmVlU3RvcmUucHJvdmlkZVByb2Nlc3NpbmdzKCk7CiAgICBDb2ZmZWVTdG9yZS5wcm92aWRlUHJvZHVjdFN0YXR1c2VzKCk7CiAgICB0aGlzLnByb2Nlc3NpbmdzID0gQ29mZmVlU3RvcmUuZ2V0UHJvY2Vzc2luZ3MoKTsKICAgIHRoaXMucHJvZHVjdFN0YXR1c2VzID0gQ29mZmVlU3RvcmUuZ2V0UHJvZHVjdFN0YXR1c2VzKCk7CiAgICB0aGlzLmZpbHRlciA9IENvZmZlZVN0b3JlLmdldEZpbHRlcigpOwogIH0sCiAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpIHsKICAgIENvZmZlZVN0b3JlLnVuc3Vic2NyaWJlKCk7CiAgfSwKICBkZXN0cm95ZWQ6IGZ1bmN0aW9uIGRlc3Ryb3llZCgpIHsKICAgIENvZmZlZVN0b3JlLnJlbW92ZUNoYW5nZUxpc3RlbmVyKHRoaXMub25DaGFuZ2UpOwogIH0KfTs="},{"version":3,"sources":["CoffeeFilter.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,SAAA,WAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,MAAA,EAAA,IADA;AAEA,MAAA,WAAA,EAAA,EAFA;AAGA,MAAA,eAAA,EAAA;AAHA,KAAA;AAAA,GAFA;AAOA,EAAA,QAAA,EAAA;AACA,IAAA,eAAA,EAAA,2BAAA;AAAA;;AACA,aAAA,KAAA,WAAA,CAAA,GAAA,CAAA,UAAA,UAAA;AAAA,eAAA;AACA,UAAA,QAAA,EAAA,UAAA,CAAA,QADA;AAEA,UAAA,IAAA,EAAA,UAAA,CAAA,IAFA;AAGA,UAAA,OAAA,EAAA,KAAA,CAAA,MAAA,CAAA,WAAA,CAAA,QAAA,CAAA,UAAA,CAAA,QAAA;AAHA,SAAA;AAAA,OAAA,CAAA;AAKA,KAPA;AAQA,IAAA,mBAAA,EAAA,+BAAA;AAAA;;AACA,aAAA,KAAA,eAAA,CAAA,GAAA,CAAA,UAAA,aAAA;AAAA,eAAA;AACA,UAAA,QAAA,EAAA,aAAA,CAAA,QADA;AAEA,UAAA,OAAA,EAAA,MAAA,CAAA,MAAA,CAAA,eAAA,CAAA,QAAA,CAAA,aAAA,CAAA,QAAA,CAFA;AAGA,UAAA,IAAA,EAAA,aAAA,CAAA;AAHA,SAAA;AAAA,OAAA,CAAA;AAKA;AAdA,GAPA;AAuBA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA,oBAAA;AACA,MAAA,WAAA,CAAA,kBAAA;AACA,MAAA,WAAA,CAAA,sBAAA;AACA;AAJA,GAvBA;AA6BA,EAAA,OAAA,EAAA;AACA,IAAA,kBAAA,EAAA,4BAAA,QAAA,EAAA;AACA,WAAA,MAAA,CAAA,gBAAA,CAAA,QAAA;AACA,MAAA,WAAA,CAAA,SAAA,CAAA,KAAA,MAAA;AACA,KAJA;AAKA,IAAA,qBAAA,EAAA,+BAAA,QAAA,EAAA;AACA,WAAA,MAAA,CAAA,mBAAA,CAAA,QAAA;AACA,MAAA,WAAA,CAAA,SAAA,CAAA,KAAA,MAAA;AACA,KARA;AASA,IAAA,QAAA,EAAA,oBAAA;AACA,WAAA,WAAA,GAAA,WAAA,CAAA,cAAA,EAAA;AACA,WAAA,eAAA,GAAA,WAAA,CAAA,kBAAA,EAAA;AACA,WAAA,MAAA,GAAA,WAAA,CAAA,SAAA,EAAA;AACA;AAbA,GA7BA;AA4CA,EAAA,OAAA,EAAA,mBAAA;AACA,IAAA,WAAA,CAAA,SAAA;AACA,IAAA,WAAA,CAAA,iBAAA,CAAA,KAAA,QAAA;AACA,IAAA,WAAA,CAAA,kBAAA;AACA,IAAA,WAAA,CAAA,sBAAA;AACA,SAAA,WAAA,GAAA,WAAA,CAAA,cAAA,EAAA;AACA,SAAA,eAAA,GAAA,WAAA,CAAA,kBAAA,EAAA;AACA,SAAA,MAAA,GAAA,WAAA,CAAA,SAAA,EAAA;AACA,GApDA;AAqDA,EAAA,aAAA,EAAA,yBAAA;AACA,IAAA,WAAA,CAAA,WAAA;AACA,GAvDA;AAwDA,EAAA,SAAA,EAAA,qBAAA;AACA,IAAA,WAAA,CAAA,oBAAA,CAAA,KAAA,QAAA;AACA;AA1DA,CAAA","sourcesContent":["<template>\n    <aside class=\"col-md-4 col-lg-3 product-filter\">\n        <h4>{{$t('CoffeeFilter.coffeeProcessingTitle')}}</h4>\n        <div\n            v-for=\"processing in processingsData\"\n            :key=\"processing.codename\"\n        >\n            <span class=\"checkbox js-postback\">\n                <input\n                    :id=\"processing.codename\"\n                    type=\"checkbox\"\n                    :checked=\"processing.checked\"\n                />\n                <label\n                    :htmlFor=\"processing.codename\"\n                    @click=\"processingOnChange(processing.codename)\"\n                >{{processing.name}}</label>\n            </span>\n        </div>\n        <h4>{{$t('CoffeeFilter.statusTitle')}}</h4>\n        <div\n            v-for=\"productStatus in productStatusesData\"\n            :key=\"productStatus.codename\"\n        >\n            <span class=\"checkbox js-postback\">\n                <input\n                    :id=\"productStatus.codename\"\n                    type=\"checkbox\"\n                    :checked=\"productStatus.checked\"\n                />\n                <label\n                    :htmlFor=\"productStatus.codename\"\n                    @click=\"productStatusOnChange(productStatus.codename)\"\n                >{{productStatus.name}}</label>\n            </span>\n        </div>\n    </aside>\n</template>\n\n<script>\nimport { CoffeeStore } from '../Stores/Coffee';\n\nexport default {\n  name: 'CoffeeFilter',\n  data: () => ({\n    filter: null,\n    processings: [],\n    productStatuses: []\n  }),\n  computed: {\n    processingsData: function() {\n      return this.processings.map(processing => ({\n        codename: processing.codename,\n        name: processing.name,\n        checked: this.filter.processings.includes(processing.codename)\n      }));\n    },\n    productStatusesData: function() {\n      return this.productStatuses.map(productStatus => ({\n        codename: productStatus.codename,\n        checked: this.filter.productStatuses.includes(productStatus.codename),\n        name: productStatus.name\n      }));\n    }\n  },\n  watch: {\n    language: function() {\n      CoffeeStore.provideProcessings();\n      CoffeeStore.provideProductStatuses();\n    }\n  },\n  methods: {\n    processingOnChange: function(codename) {\n      this.filter.toggleProcessing(codename);\n      CoffeeStore.setFilter(this.filter);\n    },\n    productStatusOnChange: function(codename) {\n      this.filter.toggleProductStatus(codename);\n      CoffeeStore.setFilter(this.filter);\n    },\n    onChange: function() {\n      this.processings = CoffeeStore.getProcessings();\n      this.productStatuses = CoffeeStore.getProductStatuses();\n      this.filter = CoffeeStore.getFilter();\n    }\n  },\n  mounted: function() {\n    CoffeeStore.subscribe();\n    CoffeeStore.addChangeListener(this.onChange);\n    CoffeeStore.provideProcessings();\n    CoffeeStore.provideProductStatuses();\n    this.processings = CoffeeStore.getProcessings();\n    this.productStatuses = CoffeeStore.getProductStatuses();\n    this.filter = CoffeeStore.getFilter();\n  },\n  beforeDestroy: function() {\n    CoffeeStore.unsubscribe();\n  },\n  destroyed: function() {\n    CoffeeStore.removeChangeListener(this.onChange);\n  }\n};\n</script>\n\n"],"sourceRoot":"src/components"}]}