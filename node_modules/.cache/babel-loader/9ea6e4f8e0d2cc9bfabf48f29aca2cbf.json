{"remainingRequest":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/babel-loader/lib/index.js!/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/src/Stores/Coffee.js","dependencies":[{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/src/Stores/Coffee.js","mtime":1638913610169},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/package.json","mtime":1638913952165},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":1638914716023},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/babel-loader/lib/index.js","mtime":1638914724198},{"path":"/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/node_modules/eslint-loader/index.js","mtime":1638914716333}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZpbmQiOwppbXBvcnQgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gZnJvbSAiL1VzZXJzL3NpZGhhcnRoc2l2YS9EZXNrdG9wL0R1bW15L2tvbnRlbnQtc2FtcGxlLWFwcC12dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczIvaGVscGVycy9lc20vcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiI7CmltcG9ydCBfZ2V0UHJvdG90eXBlT2YgZnJvbSAiL1VzZXJzL3NpZGhhcnRoc2l2YS9EZXNrdG9wL0R1bW15L2tvbnRlbnQtc2FtcGxlLWFwcC12dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczIvaGVscGVycy9lc20vZ2V0UHJvdG90eXBlT2YiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIi9Vc2Vycy9zaWRoYXJ0aHNpdmEvRGVza3RvcC9EdW1teS9rb250ZW50LXNhbXBsZS1hcHAtdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMyL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM3LmFycmF5LmluY2x1ZGVzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5pbmNsdWRlcyI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL1VzZXJzL3NpZGhhcnRoc2l2YS9EZXNrdG9wL0R1bW15L2tvbnRlbnQtc2FtcGxlLWFwcC12dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczIvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9Vc2Vycy9zaWRoYXJ0aHNpdmEvRGVza3RvcC9EdW1teS9rb250ZW50LXNhbXBsZS1hcHAtdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMyL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IHsgQ2xpZW50IH0gZnJvbSAiLi4vQ2xpZW50LmpzIjsKaW1wb3J0IHsgdGFrZVVudGlsIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnOwppbXBvcnQgeyBpbml0TGFuZ3VhZ2VDb2RlT2JqZWN0LCBkZWZhdWx0TGFuZ3VhZ2UgfSBmcm9tICIuLi9VdGlsaXRpZXMvTGFuZ3VhZ2VDb2RlcyI7CmltcG9ydCBCYXNlU3RvcmUgZnJvbSAiLi9CYXNlIjsKCnZhciByZXNldFN0b3JlID0gZnVuY3Rpb24gcmVzZXRTdG9yZSgpIHsKICByZXR1cm4gewogICAgY29mZmVlczogaW5pdExhbmd1YWdlQ29kZU9iamVjdCgpLAogICAgcHJvY2Vzc2luZ3M6IFtdLAogICAgcHJvZHVjdFN0YXR1c2VzOiBbXQogIH07Cn07Cgp2YXIgX3Jlc2V0U3RvcmUgPSByZXNldFN0b3JlKCksCiAgICBjb2ZmZWVzID0gX3Jlc2V0U3RvcmUuY29mZmVlcywKICAgIHByb2Nlc3NpbmdzID0gX3Jlc2V0U3RvcmUucHJvY2Vzc2luZ3MsCiAgICBwcm9kdWN0U3RhdHVzZXMgPSBfcmVzZXRTdG9yZS5wcm9kdWN0U3RhdHVzZXM7CgpleHBvcnQgdmFyIEZpbHRlciA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIEZpbHRlcigpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBGaWx0ZXIpOwoKICAgIHRoaXMucHJvY2Vzc2luZ3MgPSBbXTsKICAgIHRoaXMucHJvZHVjdFN0YXR1c2VzID0gW107CiAgfQoKICBfY3JlYXRlQ2xhc3MoRmlsdGVyLCBbewogICAga2V5OiAibWF0Y2hlcyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbWF0Y2hlcyhjb2ZmZWUpIHsKICAgICAgcmV0dXJuIHRoaXMubWF0Y2hlc1Byb2Nlc3NpbmdzKGNvZmZlZSkgJiYgdGhpcy5tYXRjaGVzUHJvZHVjdFN0YXR1c2VzKGNvZmZlZSk7CiAgICB9CiAgfSwgewogICAga2V5OiAibWF0Y2hlc1Byb2Nlc3NpbmdzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBtYXRjaGVzUHJvY2Vzc2luZ3MoY29mZmVlKSB7CiAgICAgIGlmICh0aGlzLnByb2Nlc3NpbmdzLmxlbmd0aCA9PT0gMCkgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9CgogICAgICB2YXIgcHJvY2Vzc2luZ3MgPSBjb2ZmZWUucHJvY2Vzc2luZy52YWx1ZS5tYXAoZnVuY3Rpb24gKHgpIHsKICAgICAgICByZXR1cm4geC5jb2RlbmFtZTsKICAgICAgfSk7CiAgICAgIHJldHVybiB0aGlzLnByb2Nlc3NpbmdzLnNvbWUoZnVuY3Rpb24gKHgpIHsKICAgICAgICByZXR1cm4gcHJvY2Vzc2luZ3MuaW5jbHVkZXMoeCk7CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogIm1hdGNoZXNQcm9kdWN0U3RhdHVzZXMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIG1hdGNoZXNQcm9kdWN0U3RhdHVzZXMoY29mZmVlKSB7CiAgICAgIGlmICh0aGlzLnByb2R1Y3RTdGF0dXNlcy5sZW5ndGggPT09IDApIHsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfQoKICAgICAgdmFyIHN0YXR1c2VzID0gY29mZmVlLnByb2R1Y3RTdGF0dXMudmFsdWUubWFwKGZ1bmN0aW9uICh4KSB7CiAgICAgICAgcmV0dXJuIHguY29kZW5hbWU7CiAgICAgIH0pOwogICAgICByZXR1cm4gdGhpcy5wcm9kdWN0U3RhdHVzZXMuc29tZShmdW5jdGlvbiAoeCkgewogICAgICAgIHJldHVybiBzdGF0dXNlcy5pbmNsdWRlcyh4KTsKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAidG9nZ2xlUHJvY2Vzc2luZyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdG9nZ2xlUHJvY2Vzc2luZyhwcm9jZXNzaW5nKSB7CiAgICAgIHZhciBpbmRleCA9IHRoaXMucHJvY2Vzc2luZ3MuaW5kZXhPZihwcm9jZXNzaW5nKTsKICAgICAgaWYgKGluZGV4IDwgMCkgdGhpcy5wcm9jZXNzaW5ncy5wdXNoKHByb2Nlc3NpbmcpO2Vsc2UgdGhpcy5wcm9jZXNzaW5ncy5zcGxpY2UoaW5kZXgsIDEpOwogICAgfQogIH0sIHsKICAgIGtleTogInRvZ2dsZVByb2R1Y3RTdGF0dXMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHRvZ2dsZVByb2R1Y3RTdGF0dXMoc3RhdHVzKSB7CiAgICAgIHZhciBpbmRleCA9IHRoaXMucHJvZHVjdFN0YXR1c2VzLmluZGV4T2Yoc3RhdHVzKTsKICAgICAgaWYgKGluZGV4IDwgMCkgdGhpcy5wcm9kdWN0U3RhdHVzZXMucHVzaChzdGF0dXMpO2Vsc2UgdGhpcy5wcm9kdWN0U3RhdHVzZXMuc3BsaWNlKGluZGV4LCAxKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBGaWx0ZXI7Cn0oKTsKdmFyIGNvZmZlZUZpbHRlciA9IG5ldyBGaWx0ZXIoKTsKCnZhciBDb2ZmZWUgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uIChfQmFzZVN0b3JlKSB7CiAgX2luaGVyaXRzKENvZmZlZSwgX0Jhc2VTdG9yZSk7CgogIGZ1bmN0aW9uIENvZmZlZSgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDb2ZmZWUpOwoKICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfZ2V0UHJvdG90eXBlT2YoQ29mZmVlKS5jYWxsKHRoaXMpKTsKICB9CgogIF9jcmVhdGVDbGFzcyhDb2ZmZWUsIFt7CiAgICBrZXk6ICJmZXRjaENvZmZlZXMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGZldGNoQ29mZmVlcyhsYW5ndWFnZSkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIHF1ZXJ5ID0gQ2xpZW50Lml0ZW1zKCkudHlwZSgnY29mZmVlJykub3JkZXJQYXJhbWV0ZXIoJ2VsZW1lbnRzLnByb2R1Y3RfbmFtZScpOwoKICAgICAgaWYgKGxhbmd1YWdlKSB7CiAgICAgICAgcXVlcnkubGFuZ3VhZ2VQYXJhbWV0ZXIobGFuZ3VhZ2UpOwogICAgICB9CgogICAgICBxdWVyeS50b09ic2VydmFibGUoKS5waXBlKHRha2VVbnRpbCh0aGlzLm9ic2VydmFibGVVbnN1YnNjcmliZSkpLnN1YnNjcmliZShmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBpZiAobGFuZ3VhZ2UpIHsKICAgICAgICAgIGNvZmZlZXNbbGFuZ3VhZ2VdID0gcmVzcG9uc2UuaXRlbXM7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGNvZmZlZXNbZGVmYXVsdExhbmd1YWdlXSA9IHJlc3BvbnNlLml0ZW1zOwogICAgICAgIH0KCiAgICAgICAgX3RoaXMubm90aWZ5Q2hhbmdlKCk7CiAgICAgIH0pOwogICAgfSAvLyBBY3Rpb25zCgogIH0sIHsKICAgIGtleTogInByb3ZpZGVDb2ZmZWUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHByb3ZpZGVDb2ZmZWUoY29mZmVlU2x1ZywgbGFuZ3VhZ2UpIHsKICAgICAgdGhpcy5mZXRjaENvZmZlZXMobGFuZ3VhZ2UpOwogICAgfQogIH0sIHsKICAgIGtleTogInByb3ZpZGVDb2ZmZWVzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBwcm92aWRlQ29mZmVlcyhsYW5ndWFnZSkgewogICAgICB0aGlzLmZldGNoQ29mZmVlcyhsYW5ndWFnZSk7CiAgICB9CiAgfSwgewogICAga2V5OiAicHJvdmlkZVByb2Nlc3NpbmdzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBwcm92aWRlUHJvY2Vzc2luZ3MoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgQ2xpZW50LnRheG9ub215KCdwcm9jZXNzaW5nJykudG9PYnNlcnZhYmxlKCkucGlwZSh0YWtlVW50aWwodGhpcy5vYnNlcnZhYmxlVW5zdWJzY3JpYmUpKS5zdWJzY3JpYmUoZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgcHJvY2Vzc2luZ3MgPSByZXNwb25zZS50YXhvbm9teS50ZXJtczsKCiAgICAgICAgX3RoaXMyLm5vdGlmeUNoYW5nZSgpOwogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJwcm92aWRlUHJvZHVjdFN0YXR1c2VzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBwcm92aWRlUHJvZHVjdFN0YXR1c2VzKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIENsaWVudC50YXhvbm9teSgncHJvZHVjdF9zdGF0dXMnKS50b09ic2VydmFibGUoKS5waXBlKHRha2VVbnRpbCh0aGlzLm9ic2VydmFibGVVbnN1YnNjcmliZSkpLnN1YnNjcmliZShmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBwcm9kdWN0U3RhdHVzZXMgPSByZXNwb25zZS50YXhvbm9teS50ZXJtczsKCiAgICAgICAgX3RoaXMzLm5vdGlmeUNoYW5nZSgpOwogICAgICB9KTsKICAgIH0gLy8gTWV0aG9kcwoKICB9LCB7CiAgICBrZXk6ICJnZXRDb2ZmZWUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldENvZmZlZShjb2ZmZWVTbHVnLCBsYW5ndWFnZSkgewogICAgICByZXR1cm4gY29mZmVlc1tsYW5ndWFnZSB8fCBkZWZhdWx0TGFuZ3VhZ2VdLmZpbmQoZnVuY3Rpb24gKGNvZmZlZSkgewogICAgICAgIHJldHVybiBjb2ZmZWUudXJsUGF0dGVybi52YWx1ZSA9PT0gY29mZmVlU2x1ZzsKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0Q29mZmVlcyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0Q29mZmVlcyhsYW5ndWFnZSkgewogICAgICByZXR1cm4gY29mZmVlc1tsYW5ndWFnZV07CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0UHJvY2Vzc2luZ3MiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldFByb2Nlc3NpbmdzKCkgewogICAgICByZXR1cm4gcHJvY2Vzc2luZ3M7CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0UHJvZHVjdFN0YXR1c2VzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRQcm9kdWN0U3RhdHVzZXMoKSB7CiAgICAgIHJldHVybiBwcm9kdWN0U3RhdHVzZXM7CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0RmlsdGVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRGaWx0ZXIoKSB7CiAgICAgIHJldHVybiBjb2ZmZWVGaWx0ZXI7CiAgICB9CiAgfSwgewogICAga2V5OiAic2V0RmlsdGVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRGaWx0ZXIoZmlsdGVyKSB7CiAgICAgIGNvZmZlZUZpbHRlciA9IGZpbHRlcjsKICAgICAgdGhpcy5ub3RpZnlDaGFuZ2UoKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBDb2ZmZWU7Cn0oQmFzZVN0b3JlKTsKCnZhciBDb2ZmZWVTdG9yZSA9IG5ldyBDb2ZmZWUoKTsKZXhwb3J0IHsgQ29mZmVlU3RvcmUsIHJlc2V0U3RvcmUgfTs="},{"version":3,"sources":["/Users/sidharthsiva/Desktop/Dummy/kontent-sample-app-vue/src/Stores/Coffee.js"],"names":["Client","takeUntil","initLanguageCodeObject","defaultLanguage","BaseStore","resetStore","coffees","processings","productStatuses","Filter","coffee","matchesProcessings","matchesProductStatuses","length","processing","value","map","x","codename","some","includes","statuses","productStatus","index","indexOf","push","splice","status","coffeeFilter","Coffee","language","query","items","type","orderParameter","languageParameter","toObservable","pipe","observableUnsubscribe","subscribe","response","notifyChange","coffeeSlug","fetchCoffees","taxonomy","terms","find","urlPattern","filter","CoffeeStore"],"mappings":"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","sourcesContent":["import { Client } from '../Client.js';\nimport { takeUntil } from 'rxjs/operators';\nimport { initLanguageCodeObject, defaultLanguage } from '../Utilities/LanguageCodes';\nimport BaseStore from './Base';\n\nconst resetStore = () => ({\n  coffees: initLanguageCodeObject(),\n  processings: [],\n  productStatuses: []\n});\nlet { coffees, processings, productStatuses } = resetStore();\n\nexport class Filter {\n  constructor() {\n    this.processings = [];\n    this.productStatuses = [];\n  }\n\n  matches(coffee) {\n    return this.matchesProcessings(coffee) && this.matchesProductStatuses(coffee);\n  }\n\n  matchesProcessings(coffee) {\n    if (this.processings.length === 0) {\n      return true;\n    }\n\n    let processings = coffee.processing.value.map(x => x.codename);\n\n    return this.processings.some(x => processings.includes(x));\n  }\n\n  matchesProductStatuses(coffee) {\n    if (this.productStatuses.length === 0) {\n      return true;\n    }\n\n    let statuses = coffee.productStatus.value.map(x => x.codename);\n\n    return this.productStatuses.some(x => statuses.includes(x));\n  }\n\n  toggleProcessing(processing) {\n    let index = this.processings.indexOf(processing);\n\n    if (index < 0) this.processings.push(processing); else this.processings.splice(index, 1);\n  }\n\n  toggleProductStatus(status) {\n    let index = this.productStatuses.indexOf(status);\n\n    if (index < 0) this.productStatuses.push(status); else this.productStatuses.splice(index, 1);\n  }\n}\n\nlet coffeeFilter = new Filter();\n\nclass Coffee extends BaseStore {\n  constructor() {\n    super();\n  }\n\n  fetchCoffees(language) {\n    var query = Client.items()\n      .type('coffee')\n      .orderParameter('elements.product_name');\n\n    if (language) {\n      query.languageParameter(language);\n    }\n\n    query.toObservable()\n      .pipe(takeUntil(this.observableUnsubscribe))\n      .subscribe(response => {\n        if (language) {\n          coffees[language] = response.items;\n        } else {\n          coffees[defaultLanguage] = response.items;\n        }\n        this.notifyChange();\n      });\n  }\n\n  // Actions\n  provideCoffee(coffeeSlug, language) {\n    this.fetchCoffees(language);\n  }\n\n  provideCoffees(language) {\n    this.fetchCoffees(language);\n  }\n\n  provideProcessings() {\n    Client.taxonomy('processing')\n      .toObservable()\n      .pipe(takeUntil(this.observableUnsubscribe))\n      .subscribe(response => {\n        processings = response.taxonomy.terms;\n        this.notifyChange();\n      });\n  }\n\n  provideProductStatuses() {\n    Client.taxonomy('product_status')\n      .toObservable()\n      .pipe(takeUntil(this.observableUnsubscribe))\n      .subscribe(response => {\n        productStatuses = response.taxonomy.terms;\n        this.notifyChange();\n      });\n  }\n\n  // Methods\n  getCoffee(coffeeSlug, language) {\n    return coffees[language || defaultLanguage].find((coffee) => coffee.urlPattern.value === coffeeSlug);\n  }\n\n  getCoffees(language) {\n    return coffees[language];\n  }\n\n  getProcessings() {\n    return processings;\n  }\n\n  getProductStatuses() {\n    return productStatuses;\n  }\n\n  getFilter() {\n    return coffeeFilter;\n  }\n\n  setFilter(filter) {\n    coffeeFilter = filter;\n    this.notifyChange();\n  }\n}\n\nlet CoffeeStore = new Coffee();\n\nexport { CoffeeStore, resetStore };"]}]}